#!/bin/bash
set -euo pipefail

source /tmp/.env

TEMPDIR=${TEMDIR:-}
KS_FILE=${TEMPDIR}/ks.cfg
OS_VARIANT=${OS_VARIANT:-}
IMAGE_TYPE=${IMAGE_TYPE:-}
IMAGE_KEY=${IMAGE_KEY:-}
OSTREE_REF=${OSTREE_REF:-}
BOOT_LOCATION=${BOOT_LOCATION:-}

# Ensure SELinux is happy with our new images.
greenprint "ðŸ‘¿ Running restorecon on image directory"
restorecon -Rv /var/lib/libvirt/images/

# Create qcow2 file for virt install.
greenprint "Create qcow2 file for virt install"
LIBVIRT_IMAGE_PATH=/var/lib/libvirt/images/${IMAGE_KEY}.qcow2
qemu-img create -f qcow2 "${LIBVIRT_IMAGE_PATH}" 20G

# Save some VARs for the next step
cat >> /tmp/.env <<EOF
LIBVIRT_IMAGE_PATH=${LIBVIRT_IMAGE_PATH}
EOF

# Write kickstart file for ostree image installation.
greenprint "Generate kickstart file"
tee "$KS_FILE" > /dev/null << STOPHERE
text
lang en_US.UTF-8
keyboard us
timezone --utc Etc/UTC
selinux --enforcing
rootpw --lock --iscrypted locked
user --name=admin --groups=wheel --iscrypted --password=\$6\$1LgwKw9aOoAi/Zy9\$Pn3ErY1E8/yEanJ98evqKEW.DZp24HTuqXPJl6GYCm8uuobAmwxLv7rGCvTRZhxtcYdmC0.XnYRSR9Sh6de3p0
sshkey --username=admin "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCzxo5dEcS+LDK/OFAfHo6740EyoDM8aYaCkBala0FnWfMMTOq7PQe04ahB0eFLS3IlQtK5bpgzxBdFGVqF6uT5z4hhaPjQec0G3+BD5Pxo6V+SxShKZo+ZNGU3HVrF9p2V7QH0YFQj5B8F6AicA3fYh2BVUFECTPuMpy5A52ufWu0r4xOFmbU7SIhRQRAQz2u4yjXqBsrpYptAvyzzoN4gjUhNnwOHSPsvFpWoBFkWmqn0ytgHg3Vv9DlHW+45P02QH1UFedXR2MqLnwRI30qqtaOkVS+9rE/dhnR+XPpHHG+hv2TgMDAuQ3IK7Ab5m/yCbN73cxFifH4LST0vVG3Jx45xn+GTeHHhfkAfBSCtya6191jixbqyovpRunCBKexI5cfRPtWOitM3m7Mq26r7LpobMM+oOLUm4p0KKNIthWcmK9tYwXWSuGGfUQ+Y8gt7E0G06ZGbCPHOrxJ8lYQqXsif04piONPA/c9Hq43O99KPNGShONCS9oPFdOLRT3U= ostree-image-test"
user --name=edge
bootloader --timeout=1 --append="net.ifnames=0 modprobe.blacklist=vc4"
network --bootproto=dhcp --device=link --activate --onboot=on
zerombr
clearpart --all --initlabel --disklabel=msdos
autopart --nohome --noswap --type=plain
ostreesetup --nogpg --osname=${IMAGE_TYPE} --remote=${IMAGE_TYPE} --url=http://192.168.100.1/repo/ --ref=${OSTREE_REF}
poweroff
%post --log=/var/log/anaconda/post-install.log --erroronfail
# no sudo password for user admin
echo -e 'admin\tALL=(ALL)\tNOPASSWD: ALL' >> /etc/sudoers
# Make X start directly
systemctl set-default graphical.target

# Make sure the 'edge' user has no password
passwd -d edge

# Create potentially missing directories
mkdir -p /home/edge/.config/autostart

# Skip gnome's initial setup
echo 'yes' >  /home/edge/.config/gnome-initial-setup-done

# Automatically start neptune
cat > /home/edge/.config/autostart/neptune3-ui.desktop << EOF
[Desktop Entry]
Type=Application
Exec=/usr/bin/neptune3-ui
Hidden=false
NoDisplay=false
X-GNOME-Autostart-enabled=true
Name[en_US]=neptune3-ui
Comment[en_US]=Launches neptune3-ui on logging in
EOF

# Ensure we have no file system permission error
chown edge:edge -R /home/edge

# Automatically log in as 'edge'
cat > /etc/gdm/custom.conf << EOF
## custom.conf

# GDM configuration storage

[daemon]
# Uncomment the line below to force the login screen to use Xorg
WaylandEnable=false
DefaultSession=gnome-xorg.desktop
AutomaticLoginEnable=True
AutomaticLogin=edge

[security]

[xdmcp]

[chooser]

[debug]
# Uncomment the line below to turn on debugging
#Enable=true
EOF
# Remove any persistent NIC rules generated by udev
rm -vf /etc/udev/rules.d/*persistent-net*.rules
# And ensure that we will do DHCP on eth0 on startup
cat > /etc/sysconfig/network-scripts/ifcfg-eth0 << EOF
DEVICE="eth0"
BOOTPROTO="dhcp"
ONBOOT="yes"
TYPE="Ethernet"
PERSISTENT_DHCLIENT="yes"
EOF
echo "Packages within this iot or edge image:"
echo "-----------------------------------------------------------------------"
rpm -qa | sort
echo "-----------------------------------------------------------------------"
# Note that running rpm recreates the rpm db files which aren't needed/wanted
rm -f /var/lib/rpm/__db*
echo "Zeroing out empty space."
# This forces the filesystem to reclaim space from deleted files
dd bs=1M if=/dev/zero of=/var/tmp/zeros || :
rm -f /var/tmp/zeros
echo "(Don't worry -- that out-of-space error was expected.)"
%end
STOPHERE

# Install ostree image via anaconda.
greenprint "Install ostree image via anaconda"
virt-install  --name="${IMAGE_KEY}"\
              --disk path="${LIBVIRT_IMAGE_PATH}",format=qcow2 \
              --ram 3072 \
              --vcpus 2 \
              --network network=integration,mac=34:49:22:B0:83:30 \
              --os-type linux \
              --os-variant "${OS_VARIANT}" \
              --location "${BOOT_LOCATION}" \
              --initrd-inject="${KS_FILE}" \
              --extra-args="ks=file:/ks.cfg console=ttyS0,115200" \
              --nographics \
              --wait=-1 \
              --noreboot

